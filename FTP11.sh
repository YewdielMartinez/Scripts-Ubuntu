#!/bin/bash

# Variables
FTP_ROOT="/srv/ftp"
GROUP1="reprobados"
GROUP2="recursadores"
GENERAL="general"
ANON="anon"
PROFTPD_CONF="/etc/proftpd/proftpd.conf"

# Funci√≥n para instalar y configurar ProFTPD
install_proftpd() {
    echo "üì¶ Instalando FTP y acl..."
    apt update && apt install -y proftpd acl

    echo "‚öô  Configurando FTP..."
    sed -i 's/# DefaultRoot/DefaultRoot/g' $PROFTPD_CONF
    sed -i 's/# RequireValidShell/RequireValidShell/g' $PROFTPD_CONF

    echo "Habilitando modo pasivo en FTP..."
    echo -e "\nPassivePorts 49152 65534" >> $PROFTPD_CONF

    echo "üë• Creando grupos(reprobados o recursadores )..."
    getent group $GROUP1 || groupadd $GROUP1
    getent group $GROUP2 || groupadd $GROUP2

    echo "üìÇ Creando directorios FTP..."
    mkdir -p "$FTP_ROOT/$GENERAL" "$FTP_ROOT/$GROUP1" "$FTP_ROOT/$GROUP2" "$FTP_ROOT/usuarios"
    mkdir -p "$FTP_ROOT/$ANON"

    echo "üîë Configurando permisos..."
    chown -R root:root "$FTP_ROOT"
    chmod 755 "$FTP_ROOT"
    chown -R root:root "$FTP_ROOT/$GENERAL"
    chmod 777 "$FTP_ROOT/$GENERAL"
    chown -R root:$GROUP1 "$FTP_ROOT/$GROUP1"
    chmod 775 "$FTP_ROOT/$GROUP1"
    chown -R root:$GROUP2 "$FTP_ROOT/$GROUP2"
    chmod 775 "$FTP_ROOT/$GROUP2"

    mkdir -p "$FTP_ROOT/$ANON/general"
    mount --bind "$FTP_ROOT/$GENERAL" "$FTP_ROOT/$ANON/general"

    cat <<EOF > /etc/proftpd/conf.d/anonymous.conf
<Anonymous $FTP_ROOT/$ANON>
    User                ftp
    Group               nogroup
    UserAlias           anonymous ftp
    <Directory general>
        <Limit WRITE>
            DenyAll
        </Limit>
        <Limit READ>
            AllowAll
        </Limit>
    </Directory>
</Anonymous>
EOF

    echo "üìú Configurando reglas de ProFTPD..."
    cat <<EOF >> $PROFTPD_CONF

# Los usuarios inician en su carpeta personal (enjaulados en ~)
DefaultRoot ~
EOF

    echo "üîÑ Reiniciando ProFTPD..."
    systemctl restart proftpd

    echo "üéâ Configuraci√≥n completada con √©xito."
}

# Funci√≥n para crear usuarios
create_users() {
    echo -e "\nüë§ ¬øCu√°ntos usuarios deseas crear?(Ingresa numero porfavor no intentes otra cosa porfavor )"
    read -r NUM_USERS

    if ! [[ "$NUM_USERS" =~ ^[0-9]+$ ]]; then
        echo "‚ùå Error: Debes ingresar un n√∫mero v√°lido."
        return
    fi

    for ((i=1; i<=NUM_USERS; i++)); do
        echo -e "\nüìù Creando usuario $i..."

       while true; do
        read -p "Nombre de usuario(Favor de ingresar un nombre de usuario sin puntos ni numeros ni signos raros se una buena persona): " USERNAME
        USERNAME=$(echo "$USERNAME" | tr '[:upper:]' '[:lower:]')
        if ! [[ "$USERNAME" =~ ^[a-z][a-z0-9_-]{2,15}$ ]]; then
            echo "Error: Nombre de usuario inv√°lido."
            continue
        fi
	break
        done


        while true; do
            read -s -p "Contrase√±a: " PASSWORD
            echo ""
            read -s -p "Confirmar contrase√±a: " PASSWORD_CONFIRM
            echo ""

            if [ "$PASSWORD" != "$PASSWORD_CONFIRM" ]; then
                echo "‚ùå Las contrase√±as no coinciden. Int√©ntalo de nuevo."
                continue
            fi

            if [ ${#PASSWORD} -lt 8 ]; then
                echo "‚ùå La contrase√±a debe tener al menos 8 caracteres."
                continue
            fi

            if ! [[ "$PASSWORD" =~ [0-9] ]]; then
                echo "‚ùå La contrase√±a debe contener al menos un n√∫mero."
                continue
            fi

            if ! [[ "$PASSWORD" =~ [A-Z] ]]; then
                echo "‚ùå La contrase√±a debe contener al menos una letra may√∫scula."
                continue
            fi

            if ! [[ "$PASSWORD" =~ [a-z] ]]; then
                echo "‚ùå La contrase√±a debe contener al menos una letra min√∫scula."
                continue
            fi

            if ! [[ "$PASSWORD" =~ [\@\#\$\%\^\&\*\(\)\_\+\!] ]]; then
                echo "‚ùå La contrase√±a debe contener al menos un car√°cter especial (@, #, $, %, ^, &, *, (, ), _, +, !)."
                continue
            fi

            break
        done

        while true; do
            read -p "Grupo ($GROUP1/$GROUP2): " group
            if [[ "$group" == "$GROUP1" || "$group" == "$GROUP2" ]]; then
                break
            else
                echo "‚ùå Grupo no v√°lido. Ingresa '$GROUP1' o '$GROUP2'."
            fi
        done

        if id "$USERNAME" &>/dev/null; then
            echo "‚ö†  El usuario $USERNAME ya existe, saltando creaci√≥n..."
            continue
        fi

        useradd -m -s /bin/false -G "$group" "$USERNAME"
        usermod -d "$FTP_ROOT/usuarios/$USERNAME" "$USERNAME"
        mkdir -p "$FTP_ROOT/usuarios/$USERNAME"
        mkdir -p "$FTP_ROOT/usuarios/$USERNAME/$USERNAME"
        chown "$USERNAME:$group" "$FTP_ROOT/usuarios/$USERNAME/$USERNAME"
        chmod 700 "$FTP_ROOT/usuarios/$USERNAME/$USERNAME"
        chown -R "$USERNAME:$group" "$FTP_ROOT/usuarios/$USERNAME"
        chmod 770 "$FTP_ROOT/usuarios/$USERNAME"
        mkdir -p "$FTP_ROOT/usuarios/$USERNAME/general"
        mkdir -p "$FTP_ROOT/usuarios/$USERNAME/$group"
        mount --bind "$FTP_ROOT/$GENERAL" "$FTP_ROOT/usuarios/$USERNAME/general"
        mount --bind "$FTP_ROOT/$group" "$FTP_ROOT/usuarios/$USERNAME/$group"
        echo "$USERNAME:$PASSWORD" | chpasswd

        echo "‚úÖ Usuario $USERNAME creado en el grupo $group."
    done

    echo "üîÑ Reiniciando ProFTPD..."
    systemctl restart proftpd

    echo "üéâ Usuarios creados con √©xito."
}

# Men√∫ interactivo
while true; do
    echo -e "\nüìã Configurar servidor FTP Version 11.01"
    echo -e "\nüìã Hoy vale 6 verdad :)"
    echo "1. Instalar y configurar FTP"
    echo "2. Crear usuarios"
    echo "3. Salir"
    read -p "Selecciona una opci√≥n: " option

    case $option in
        1)
            install_proftpd
            ;;
        2)
            create_users
            ;;
        3)
            echo "üëã Saliendo..."
            break
            ;;
        *)
            echo "‚ùå Opci√≥n no v√°lida. Int√©ntalo de nuevo."
            ;;
    esac
done